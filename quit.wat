(module
    (import "wasi_unstable" "fd_write" (func $fd_write (param i32 i32 i32 i32) (result i32)))
    (import "wasi_unstable" "fd_read" (func $fd_read (param i32 i32 i32 i32) (result i32)))
    (import "wasi_unstable" "random_get" (func $random_get (param i32 i32) (result i32) ))
    (global $stdout i32 (i32.const 1))
    (global $iovecp_read  i32 (i32.const 0))
    (global $iovecl_read  i32 (i32.const 4))
    (global $iovecp_write i32 (i32.const 8))
    (global $iovecl_write i32 (i32.const 12))
    (global $out i32 (i32.const 16))
    (memory 1)
    (export "memory" (memory 0))
    ;; (func $print (param $x i32)
    ;;     (local $write_storage_address i32)
    ;;     (local $write_storage_length  i32)
    ;;     (local.set $write_storage_address (i32.const 100))
    ;;     (i32.store (local.get $write_storage_address) (local.get $x))
    ;;     (call $fd_write 
    ;;         (i32.const 1) 
    ;;         (local.get $write_storage_address) 
    ;;         (i32.const 4)
    ;;         (global.get $out)
    ;;     )
    ;;     (drop)
    ;; )
    (func $print_i32_i32 (param $byte1 i32) (param $byte2 i32)
        ;;(i32.store (global.get $iovecp_write) (i32.const 100))
        ;;(i32.store (global.get $iovecl_write) (i32.const 1)) 
        (i32.store (i32.const 0) (i32.const 100))
        (i32.store (i32.const 4) (i32.const 1))
        (i32.store (i32.const 8) (i32.const 200))
        (i32.store (i32.const 12) (i32.const 1)) 
        ;;(i32.store (local.get $location) (local.get $byte))
        (i32.store (i32.const 100) (local.get $byte1))
        (i32.store (i32.const 200) (local.get $byte2))
        (call $fd_write (i32.const 1) (i32.const 0) (i32.const 2) (i32.const 100))
        drop
    )
    (func $print (param $x i32)
        (i32.store (i32.const 0) (i32.const 100))
        (i32.store (i32.const 4) (i32.const 1))
        (i32.store (i32.const 100) (local.get $x))
        (call $fd_write (i32.const 1) (i32.const 0) (i32.const 1) (i32.const 100))
        drop
    )

    (func $read (result i32)
        (i32.store (i32.const 0) (i32.const 100))
        (i32.store (i32.const 4) (i32.const 1))
        (call $fd_read (i32.const 0) (i32.const 0) (i32.const 1) (i32.const 0))
        drop
        (i32.load (i32.const 100))
    )
    (func $main (export "_start")
    (call $print (call $read))
    (call $print (i32.const 0x71))
    ;; (call $print (i32.const 0x71))
    ;; (call $print (i32.const 0x71))
    ;; (call $print (i32.const 0x71))
    ;; (call $print (i32.const 0x71))
        ;;(local $in i32)
        ;;(call $read)
       ;; drop
        ;;(call $print (call $read))
        ;;
        ;;(local.set $in (call $read))
        ;;(call $print (i32.const 0x71))
        
        ;;(call $print (local.get $in)) 
        ;;
        ;;(call $print (local.get $in))
        ;;(loop $loop
            ;;(local.set $in (call $get_i32))
            ;;(call $print (i32.const 0x71))
            ;;(call $print (local.get $in))

            ;;(call $print (i32.ne (local.get $in) (i32.const 0x71)))
           ;; (call $print (call $get_i32))
            ;;(call $print (i32.add (local.get $in) (i32.const 0x61)  ))
            ;;(call $print ( i32.const 0x0A ))
            ;;( br_if $loop (i32.eq (i32.const 0x71) (local.get $in) ) )
            ;;(br_if $loop (i32.ne (local.get $in) (i32.const 0x71)) )
    )
    
)